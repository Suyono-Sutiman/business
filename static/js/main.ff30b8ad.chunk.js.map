{"version":3,"sources":["Component/Navbar.js","Component/Hero.js","Component/Intro.js","Component/Vision.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","props","handleScroll","prevScrollpos","state","currentScrollPos","window","pageYOffset","visible","setState","addEventListener","this","className","classnames","href","React","Component","Hero","id","Intro","Vision","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"gXAkEeA,E,YA7DX,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KAURC,aAAe,WAAO,IACZC,EAAkB,EAAKC,MAAvBD,cAEFE,EAAmBC,OAAOC,YAC1BC,EAAUL,EAAgBE,EAEhC,EAAKI,SAAS,CACZN,cAAeE,EACfG,aAhBF,EAAKJ,MAAQ,CACXD,cAAeG,OAAOC,YACtBC,SAAS,GALI,E,iFASfF,OAAOI,iBAAiB,SAAUC,KAAKT,gB,+BAcvC,OACI,yBAAKU,UAAWC,IAAW,SAAU,CAAC,kBAAmBF,KAAKP,MAAMI,WAChE,uBAAGM,KAAK,SAAQ,uCAChB,yBAAKF,UAAWC,IAAW,OAAQ,CAAC,gBAAiBF,KAAKP,MAAMI,WAC5D,4BAAI,uBAAGM,KAAK,SAAR,SAGJ,4BAAI,uBAAGA,KAAK,iBAAR,UAGJ,4BAAI,uBAAGA,KAAK,WAAR,WAGJ,4BAAI,uBAAGA,KAAK,iBAAR,aAGJ,4BAAI,uBAAGA,KAAK,iBAAR,aAIR,yBAAKF,UAAU,OACX,4BAAI,uBAAGE,KAAK,iBAAR,UAGJ,4BAAI,uBAAGA,KAAK,WAAR,WAGJ,4BAAI,uBAAGA,KAAK,iBAAR,aAGJ,4BAAI,uBAAGA,KAAK,iBAAR,kB,GAtDHC,IAAMC,WCiBZC,G,uLAhBP,OACI,yBAAKL,UAAU,OAAOM,GAAG,QACrB,yBAAKN,UAAU,YACX,sCAGA,0GAKJ,yBAAKA,UAAU,kB,GAbZG,IAAMC,YCuCVG,G,uLArCP,OACI,yBAAKP,UAAU,QAAQM,GAAG,gBACtB,yBAAKN,UAAU,cACX,4CACA,kUASA,yOAOA,mUAUJ,yBAAKA,UAAU,eACX,yBAAKA,UAAU,e,GAjCfG,IAAMC,YC4CXI,G,uLA1CP,OACI,yBAAKR,UAAU,SAASM,GAAG,UACvB,yBAAKN,UAAU,WACX,yBAAKA,UAAU,YACf,sCACA,8YAcA,yBAAKA,UAAU,eAEnB,yBAAKA,UAAU,WACX,qDACA,yOAQA,+O,GAjCCG,IAAMC,YCeZK,MAXf,WACE,OACE,yBAAKT,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCDcU,QACW,cAA7BhB,OAAOiB,SAASC,UAEe,UAA7BlB,OAAOiB,SAASC,UAEhBlB,OAAOiB,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.ff30b8ad.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Navbar.css';\r\nimport classnames from \"classnames\";\r\n\r\nclass Navbar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        this.state = {\r\n          prevScrollpos: window.pageYOffset,\r\n          visible: true\r\n        };\r\n      }\r\n      componentDidMount() {\r\n        window.addEventListener(\"scroll\", this.handleScroll);\r\n      }\r\n      handleScroll = () => {\r\n        const { prevScrollpos } = this.state;\r\n    \r\n        const currentScrollPos = window.pageYOffset;\r\n        const visible = prevScrollpos > currentScrollPos;\r\n    \r\n        this.setState({\r\n          prevScrollpos: currentScrollPos,\r\n          visible\r\n        });\r\n      };\r\n    render () {\r\n        return (\r\n            <div className={classnames('navbar', {'navbar--hidden': !this.state.visible})}>\r\n                <a href='#home'><h2>COFFEE</h2></a>\r\n                <div className={classnames('menu', {'menu--hidden': !this.state.visible})}>\r\n                    <h4><a href='#home'>\r\n                    Home</a>\r\n                    </h4>\r\n                    <h4><a href='#introduction'>\r\n                    Intro</a>\r\n                    </h4>\r\n                    <h4><a href='#vision'>\r\n                    Vision</a>\r\n                    </h4>\r\n                    <h4><a href='#introduction'>\r\n                    Services</a>\r\n                    </h4>\r\n                    <h4><a href='#introduction'>\r\n                    Contact</a>\r\n                    </h4>\r\n                </div>\r\n                <div className='nav'>\r\n                    <h4><a href='#introduction'>\r\n                    Intro</a>\r\n                    </h4>\r\n                    <h4><a href='#vision'>\r\n                    Vision</a>\r\n                    </h4>\r\n                    <h4><a href='#introduction'>\r\n                    Services</a>\r\n                    </h4>\r\n                    <h4><a href='#introduction'>\r\n                    Contact</a>\r\n                    </h4>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Navbar;","import React from 'react';\r\nimport './Hero.css';\r\n\r\nclass Hero extends React.Component {\r\n    render () {\r\n        return (\r\n            <div className='hero' id='home'>\r\n                <div className='hero-top'>\r\n                    <h3>\r\n                        Coffee\r\n                    </h3>\r\n                    <p>\r\n                    Lorem Ipsum is simply dummy text of the\r\n                    printing and typesetting industry.\r\n                    </p>\r\n                </div>\r\n                <div className='hero-bot'></div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Hero;","import React from 'react';\r\nimport './Intro.css';\r\n\r\nclass Intro extends React.Component {\r\n    render () {\r\n        return (\r\n            <div className='intro' id='introduction'>\r\n                <div className='intro-left'>\r\n                    <h3>Introduction</h3>\r\n                    <p>\r\n                    Lorem Ipsum is simply dummy text of the printing\r\n                    and typesetting industry. Ut wisi enim ad minim\r\n                    veniam, quis nostrud exerci tation ullamcorper\r\n                    suscipit lobortis nisl ut aliquip ex ea commodo\r\n                    consequat. Duis autem vel eum iriure dolor in\r\n                    hendrerit in vulputate velit esse molestie\r\n                    consequat.\r\n                    </p>\r\n                    <p>\r\n                    Lorem Ipsum is simply dummy text of the printing\r\n                    and typesetting industry. Ut wisi enim ad minim\r\n                    veniam, quis nostrud exerci tation ullamcorper\r\n                    suscipit lobortis nisl ut aliquip ex ea commodo\r\n                    consequat.\r\n                    </p>\r\n                    <p>\r\n                    Lorem Ipsum is simply dummy text of the printing\r\n                    and typesetting industry. Ut wisi enim ad minim\r\n                    veniam, quis nostrud exerci tation ullamcorper\r\n                    suscipit lobortis nisl ut aliquip ex ea commodo\r\n                    consequat. Duis autem vel eum iriure dolor in\r\n                    hendrerit in vulputate velit esse molestie\r\n                    consequat.\r\n                    </p>\r\n                </div>\r\n                <div className='intro-right'>\r\n                    <div className='bean'></div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Intro;","import React from 'react';\r\nimport './Vision.css';\r\n\r\nclass Vision extends React.Component {\r\n    render () {\r\n        return (\r\n            <div className='vision' id='vision'>\r\n                <div className='vis-top'>\r\n                    <div className='vis-left'>\r\n                    <h3>VISION</h3>\r\n                    <p>\r\n                    Lorem Ipsum is simply dummy text of\r\n                    the printing and typesetting industry.\r\n                    Ut wisi enim ad minim veniam, quis\r\n                    nostrud exerci tation ullamcorper\r\n                    suscipit lobortis nisl ut aliquip ex ea\r\n                    commodo consequat. Duis autem vel\r\n                    eum iriure dolor in hendrerit in\r\n                    vulputate velit esse molestie\r\n                    consequat. Lorem Ipsum is simply\r\n                    dummy text of the printing and\r\n                    typesetting industry.\r\n                    </p>\r\n                    </div>\r\n                    <div className='vis-right'></div>\r\n                </div>\r\n                <div className='vis-bot'>\r\n                    <h4>LOREM IPSUM IS SIMPLY</h4>\r\n                    <p>\r\n                    Lorem Ipsum is simply dummy text of\r\n                    the printing and typesetting industry. Ut\r\n                    wisi enim ad minim veniam, quis\r\n                    nostrud exerci tation ullamcorper\r\n                    suscipit lobortis nisl ut aliquip ex ea\r\n                    commodo consequat.\r\n                    </p>\r\n                    <p>\r\n                    Lorem Ipsum is simply dummy text of the printing \r\n                    and typesetting industry. Ut wisi enim ad minim\r\n                    veniam, quis nostrud exerci tation ullamcorper \r\n                    suscipit lobortis nisl ut aliquip ex ea commodo consequat.\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Vision;","import React from 'react';\nimport './App.css';\nimport Navbar from './Component/Navbar';\nimport Hero from './Component/Hero';\nimport Intro from './Component/Intro';\nimport Vision from './Component/Vision';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navbar/>\n      <Hero/>\n      <Intro/>\n      <Vision/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}